{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport invariant from 'invariant';\nimport NativeEventEmitter from \"react-native-web/dist/exports/NativeEventEmitter\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nvar nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\nexport var EventEmitter = function () {\n  function EventEmitter(nativeModule) {\n    _classCallCheck(this, EventEmitter);\n    this._listenerCount = 0;\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule);\n  }\n  _createClass(EventEmitter, [{\n    key: \"addListener\",\n    value: function addListener(eventName, listener) {\n      var _this = this,\n        _subscription;\n      if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n        this._nativeModule.startObserving();\n      }\n      this._listenerCount++;\n      var nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n      var subscription = (_subscription = {}, _defineProperty(_subscription, nativeEmitterSubscriptionKey, nativeEmitterSubscription), _defineProperty(_subscription, \"remove\", function remove() {\n        _this.removeSubscription(subscription);\n      }), _subscription);\n      return subscription;\n    }\n  }, {\n    key: \"removeAllListeners\",\n    value: function removeAllListeners(eventName) {\n      var removedListenerCount = this._eventEmitter.listeners(eventName).length;\n      this._eventEmitter.removeAllListeners(eventName);\n      this._listenerCount -= removedListenerCount;\n      invariant(this._listenerCount >= 0, \"EventEmitter must have a non-negative number of listeners\");\n      if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n        this._nativeModule.stopObserving();\n      }\n    }\n  }, {\n    key: \"removeSubscription\",\n    value: function removeSubscription(subscription) {\n      var nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\n      if (!nativeEmitterSubscription) {\n        return;\n      }\n      this._eventEmitter.removeSubscription(nativeEmitterSubscription);\n      this._listenerCount--;\n      delete subscription[nativeEmitterSubscriptionKey];\n      subscription.remove = function () {};\n      if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n        this._nativeModule.stopObserving();\n      }\n    }\n  }, {\n    key: \"emit\",\n    value: function emit(eventName) {\n      var _this$_eventEmitter;\n      for (var _len = arguments.length, params = new Array(_len > 1 ? _len - 1 : 0), _key = 1; _key < _len; _key++) {\n        params[_key - 1] = arguments[_key];\n      }\n      (_this$_eventEmitter = this._eventEmitter).emit.apply(_this$_eventEmitter, [eventName].concat(params));\n    }\n  }]);\n  return EventEmitter;\n}();","map":{"version":3,"mappings":";;;AAAA,OAAOA,SAAS,MAAM,WAAW;AAAC;AAAA;AAGlC,IAAMC,4BAA4B,GAAG,+BAA+B;AAapE,WAAaC,YAAY;EAKvB,sBAAYC,YAA0B;IAAA;IAJtC,mBAAc,GAAG,CAAC;IAKhB,IAAI,CAACC,aAAa,GAAGD,YAAY;IACjC,IAAI,CAACE,aAAa,GAAG,IAAIC,kBAAkB,CAACH,YAAmB,CAAC;EAClE;EAAC;IAAA;IAAA,OAED,qBAAeI,SAAiB,EAAEC,QAA4B;MAAA;QAAA;MAC5D,IAAI,CAAC,IAAI,CAACC,cAAc,IAAIC,QAAQ,CAACC,EAAE,KAAK,KAAK,IAAI,IAAI,CAACP,aAAa,CAACQ,cAAc,EAAE;QACtF,IAAI,CAACR,aAAa,CAACQ,cAAc,EAAE;;MAGrC,IAAI,CAACH,cAAc,EAAE;MACrB,IAAMI,yBAAyB,GAAG,IAAI,CAACR,aAAa,CAACS,WAAW,CAACP,SAAS,EAAEC,QAAQ,CAAC;MACrF,IAAMO,YAAY,uDACfd,4BAA4B,EAAGY,yBAAyB,4CACjD,kBAAK;QACX,KAAI,CAACG,kBAAkB,CAACD,YAAY,CAAC;MACvC,CAAC,iBACF;MACD,OAAOA,YAAY;IACrB;EAAC;IAAA;IAAA,OAED,4BAAmBR,SAAiB;MAClC,IAAMU,oBAAoB,GAAG,IAAI,CAACZ,aAAa,CAACa,SAAS,CAACX,SAAS,CAAC,CAACY,MAAM;MAC3E,IAAI,CAACd,aAAa,CAACe,kBAAkB,CAACb,SAAS,CAAC;MAChD,IAAI,CAACE,cAAc,IAAIQ,oBAAoB;MAC3CjB,SAAS,CACP,IAAI,CAACS,cAAc,IAAI,CAAC,8DAEzB;MAED,IAAI,CAAC,IAAI,CAACA,cAAc,IAAIC,QAAQ,CAACC,EAAE,KAAK,KAAK,IAAI,IAAI,CAACP,aAAa,CAACiB,aAAa,EAAE;QACrF,IAAI,CAACjB,aAAa,CAACiB,aAAa,EAAE;;IAEtC;EAAC;IAAA;IAAA,OAED,4BAAmBN,YAA0B;MAC3C,IAAMF,yBAAyB,GAAGE,YAAY,CAACd,4BAA4B,CAAC;MAC5E,IAAI,CAACY,yBAAyB,EAAE;QAC9B;;MAGF,IAAI,CAACR,aAAa,CAACW,kBAAkB,CAACH,yBAA0B,CAAC;MACjE,IAAI,CAACJ,cAAc,EAAE;MAIrB,OAAOM,YAAY,CAACd,4BAA4B,CAAC;MAGjDc,YAAY,CAACO,MAAM,GAAG,YAAK,CAAE,CAAC;MAE9B,IAAI,CAAC,IAAI,CAACb,cAAc,IAAIC,QAAQ,CAACC,EAAE,KAAK,KAAK,IAAI,IAAI,CAACP,aAAa,CAACiB,aAAa,EAAE;QACrF,IAAI,CAACjB,aAAa,CAACiB,aAAa,EAAE;;IAEtC;EAAC;IAAA;IAAA,OAED,cAAKd,SAAiB,EAAkB;MAAA;MAAA,kCAAbgB,MAAa;QAAbA,MAAa;MAAA;MACtC,2BAAI,CAAClB,aAAa,EAACmB,IAAI,6BAACjB,SAAS,SAAKgB,MAAM,EAAC;IAC/C;EAAC;EAAA;AAAA","names":["invariant","nativeEmitterSubscriptionKey","EventEmitter","nativeModule","_nativeModule","_eventEmitter","NativeEventEmitter","eventName","listener","_listenerCount","Platform","OS","startObserving","nativeEmitterSubscription","addListener","subscription","removeSubscription","removedListenerCount","listeners","length","removeAllListeners","stopObserving","remove","params","emit"],"sourceRoot":"","sources":["../src/EventEmitter.ts"],"sourcesContent":["import invariant from 'invariant';\nimport { NativeEventEmitter, Platform } from 'react-native';\n\nconst nativeEmitterSubscriptionKey = '@@nativeEmitterSubscription@@';\n\ntype NativeModule = {\n  startObserving?: () => void;\n  stopObserving?: () => void;\n  addListener: (eventName: string) => void;\n  removeListeners: (count: number) => void;\n};\n\nexport type Subscription = {\n  remove: () => void;\n};\n\nexport class EventEmitter {\n  _listenerCount = 0;\n  _nativeModule: NativeModule;\n  _eventEmitter: NativeEventEmitter;\n\n  constructor(nativeModule: NativeModule) {\n    this._nativeModule = nativeModule;\n    this._eventEmitter = new NativeEventEmitter(nativeModule as any);\n  }\n\n  addListener<T>(eventName: string, listener: (event: T) => void): Subscription {\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.startObserving) {\n      this._nativeModule.startObserving();\n    }\n\n    this._listenerCount++;\n    const nativeEmitterSubscription = this._eventEmitter.addListener(eventName, listener);\n    const subscription = {\n      [nativeEmitterSubscriptionKey]: nativeEmitterSubscription,\n      remove: () => {\n        this.removeSubscription(subscription);\n      },\n    };\n    return subscription;\n  }\n\n  removeAllListeners(eventName: string): void {\n    const removedListenerCount = this._eventEmitter.listeners(eventName).length;\n    this._eventEmitter.removeAllListeners(eventName);\n    this._listenerCount -= removedListenerCount;\n    invariant(\n      this._listenerCount >= 0,\n      `EventEmitter must have a non-negative number of listeners`\n    );\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  removeSubscription(subscription: Subscription): void {\n    const nativeEmitterSubscription = subscription[nativeEmitterSubscriptionKey];\n    if (!nativeEmitterSubscription) {\n      return;\n    }\n\n    this._eventEmitter.removeSubscription(nativeEmitterSubscription!);\n    this._listenerCount--;\n\n    // Ensure that the emitter's internal state remains correct even if `removeSubscription` is\n    // called again with the same subscription\n    delete subscription[nativeEmitterSubscriptionKey];\n\n    // Release closed-over references to the emitter\n    subscription.remove = () => {};\n\n    if (!this._listenerCount && Platform.OS !== 'ios' && this._nativeModule.stopObserving) {\n      this._nativeModule.stopObserving();\n    }\n  }\n\n  emit(eventName: string, ...params: any[]): void {\n    this._eventEmitter.emit(eventName, ...params);\n  }\n}\n"]},"metadata":{},"sourceType":"module"}