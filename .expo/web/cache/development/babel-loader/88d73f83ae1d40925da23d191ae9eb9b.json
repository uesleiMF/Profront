{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport DeviceEventEmitter from \"react-native-web/dist/exports/DeviceEventEmitter\";\nimport { RCTEventEmitter } from \"./nativeEmitters\";\nvar SyntheticPlatformEmitter = function () {\n  function SyntheticPlatformEmitter() {\n    _classCallCheck(this, SyntheticPlatformEmitter);\n    this._emitter = new RCTEventEmitter(DeviceEventEmitter.sharedSubscriber);\n  }\n  _createClass(SyntheticPlatformEmitter, [{\n    key: \"emit\",\n    value: function emit(eventName, props) {\n      this._emitter.emit(eventName, props);\n    }\n  }]);\n  return SyntheticPlatformEmitter;\n}();\nexport default new SyntheticPlatformEmitter();","map":{"version":3,"mappings":";;;AAEA,SAASA,eAAe;AAA2B,IAM7CC,wBAAwB;EAA9B;IAAA;IACE,aAAQ,GAAG,IAAID,eAAe,CAACE,kBAAkB,CAACC,gBAAgB,CAAC;EAKrE;EAAC;IAAA;IAAA,OAHC,cAAKC,SAAiB,EAAEC,KAAU;MAChC,IAAI,CAACC,QAAQ,CAACC,IAAI,CAACH,SAAS,EAAEC,KAAK,CAAC;IACtC;EAAC;EAAA;AAAA;AAGH,eAAe,IAAIJ,wBAAwB,EAAE","names":["RCTEventEmitter","SyntheticPlatformEmitter","DeviceEventEmitter","sharedSubscriber","eventName","props","_emitter","emit"],"sourceRoot":"","sources":["../src/SyntheticPlatformEmitter.ts"],"sourcesContent":["import { DeviceEventEmitter } from 'react-native';\n\nimport { RCTEventEmitter } from './nativeEmitters';\n\n/**\n * This emitter is used for sending synthetic native events to listeners\n * registered in the API layer with `NativeEventEmitter`.\n */\nclass SyntheticPlatformEmitter {\n  _emitter = new RCTEventEmitter(DeviceEventEmitter.sharedSubscriber);\n\n  emit(eventName: string, props: any): void {\n    this._emitter.emit(eventName, props);\n  }\n}\n\nexport default new SyntheticPlatformEmitter();\n"]},"metadata":{},"sourceType":"module"}